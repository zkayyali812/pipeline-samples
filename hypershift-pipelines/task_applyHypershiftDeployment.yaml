apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-acm-hyper-apply-hyper-deployment
spec:
  params:
  - name: targetManagedCluster
    default: local-cluster
    description: The managedcluster to target to become a managementcluster
    type: string
  steps:
  - args:
    - |-
      #!/bin/bash
      set -e

      HYPERSHIFT_CREDS=$(oc get secret zk-hypershift-operator-oidc-provider-s3-credentials  -o yaml | yq eval 'del(.metadata)' - | yq eval '.metadata.name = "hypershift-operator-oidc-provider-s3-credentials"' -)
      ACM_CREDS=$(oc get secret zk-hypershift-acm-creds  -o yaml | yq eval 'del(.metadata)' - | yq eval '.metadata.name = "acm-credentials"' -)

      _LOGIN_CMD=$(cat login.sh)
      eval "$_LOGIN_CMD"

      echo "$HYPERSHIFT_CREDS" | oc apply -f - -n $(inputs.params.targetManagedCluster)
      echo "$ACM_CREDS" | oc apply -f - -n multicluster-engine

      echo "Applying HyperShift ManagedClusterAddon ..."
      oc apply -f samples/hypershift-pipelines/resources/hypershift-addon.yaml -n $(inputs.params.targetManagedCluster)
      
      echo "Waiting for pod to be available"
      sleep 60

      oc project multicluster-engine
      oc create ns clusters || true
      _TEMPLATE="apiVersion: cluster.open-cluster-management.io/v1alpha1
      kind: HypershiftDeployment
      metadata:
        name: $(inputs.params.targetManagedCluster)-hyper-deploy
      spec:
        targetManagedCluster: $(inputs.params.targetManagedCluster)
        targetNamespace: clusters
        override: MANIFESTWORK
        infrastructure:
          cloudProvider:
            name: acm-credentials
          configure: true
          platform:
            aws:
              region: us-east-2"

      echo "$_TEMPLATE" | oc apply -f -

       _ATTEMPTS=0
      until oc get hostedcluster hypershift-demo -n clusters | grep "hypershift-demo";
      do 
          echo "Waiting for HostedCluster to be deployed from HyperShiftDeployment"
          _ATTEMPTS=$((_ATTEMPTS + 1))
          sleep 15;
          if [[ $_ATTEMPTS == 10 ]]; then
              echo "The hostedcluster did not come up in the allotted time"
              exit 1
          fi
      done

      _ATTEMPTS=0 
      echo "Waiting for HostedCluster deployment to complete ..."
      until oc get hostedcluster -n clusters hypershift-demo -o yaml | yq eval '.status.version.history.[0].state' - | grep "Completed";
      do 
          echo "$_ATTEMPTS/30: Waiting for HostedCluster deployment to be complete... Sleeping 1 min"
          _ATTEMPTS=$((_ATTEMPTS + 1))
          sleep 60;
          if [[ $_ATTEMPTS == 30 ]]; then
              echo "The hostedcluster not come up in the allotted time"
              exit 1
          fi
      done

      echo "HostedCluster deployed successfully."
      exit 0
    command:
    - /bin/bash
    - -c
    image: quay.io/zkayyali812/ocm-utils:latest
    name: apply
    resources: {}
    workingDir: /workspace/source
  workspaces:
  - name: source
